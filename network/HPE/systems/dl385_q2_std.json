{
  "accelerator_frequency": "",
  "accelerator_host_interconnect": "8x PCIe 8 lane Gen4",
  "accelerator_interconnect": "TODO",
  "accelerator_interconnect_topology": "",
  "accelerator_memory_capacity": "16 GB",
  "accelerator_memory_configuration": "LPDDR4x",
  "accelerator_model_name": "QUALCOMM Cloud AI 100 PCIe/HHHL Standard",
  "accelerator_on-chip_memories": "126 MB",
  "accelerators_per_node": "2",
  "cooling": "air",
  "division": "network",
  "framework": "QUALCOMM Cloud AI SDK v1.9.1",
  "host_memory_capacity": "512 GB",
  "host_memory_configuration": "8x 64 GB",
  "host_networking": "Ethernet",
  "host_networking_topology": "TODO",
  "host_network_card_count": "1",
  "host_processor_caches": "L1d: 2 MiB; L1i: 2 MiB; L2: 32 MiB; L3: 512 MiB",
  "host_processor_core_count": "32",
  "host_processor_frequency": "2800 MHz",
  "host_processor_interconnect": "",
  "host_processor_model_name": "AMD EPYC 7543 32-Core Processor",
  "host_processors_per_node": "2",
  "host_storage_capacity": "2x 2 TB",
  "host_storage_type": "2x SSD",
  "hw_notes": "With 75W Accelerator TDP constraints",
  "number_of_nodes": "1",
  "operating_system": "Ubuntu 20.04.6 LTS (Linux kernel 5.15.0-75-generic #82~20.04.1-Ubuntu SMP Wed Jun 7 19:37:37 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux)",
  "other_software_stack": "Docker 24.0.4, build 3713ee1; Python v3.8.10",
  "status": "available",
  "submitter": "HPE",
  "sw_notes": "Powered by the KRAI X and KILT technologies",
  "system_name": "HPE ProLiant DL385 Gen10 Plus v2 (2x QAIC100 Standard)",
  "system_type_detail": "rack server",
  "system_type": "datacenter",
  "is_network": "True",
  "network_type": "Ethernet",
  "network_media": "Copper",
  "network_rate": "10Gb",
  "nic_loadgen": "NetXtreme BCM5719 Gigabit Ethernet PCIe",
  "number_nic_loadgen": "1",
  "net_software_stack_loadgen": "GNU c sys/socket.h",
  "network_protocol": "TCPv6",
  "number_connections": "1",
  "nic_sut": "BCM57416 NetXtreme-E Dual-Media 10G RDMA Ethernet Controller",
  "number_nic_sut": "1",
  "net_software_stack_sut": "GNU c sys/socket.h",
  "network_topology": "QDL <--> [HPE OfficeConnect 1850 Series Switch] <--> SUT"
}
